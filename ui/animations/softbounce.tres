[gd_resource type="ShaderMaterial" load_steps=29 format=2]

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeScalarFunc" id=10]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=11]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 0.85 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 1.8 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=14]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=15]
function = 1

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=16]
default_input_values = [ 0, 0.2, 1, 1.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeVectorCompose" id=17]

[sub_resource type="VisualShaderNodeScalarOp" id=18]
default_input_values = [ 0, 0.0, 1, 0.65 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=19]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.6, 0.6, 0.6 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorLen" id=20]

[sub_resource type="VisualShaderNodeScalarFunc" id=21]
function = 31

[sub_resource type="VisualShaderNodeVectorOp" id=22]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 0.5 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=23]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=24]
default_input_values = [ 0, 0.2, 1, 0.7, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=25]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=26]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=27]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=28]
default_input_values = [ 0, 0.4, 1, 0.55, 2, 0.0 ]

[sub_resource type="VisualShaderNodeVectorOp" id=29]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -0.5, -0.5, 0 ) ]

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
function = 31

[sub_resource type="VisualShaderNodeVectorLen" id=7]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=8]
default_input_values = [ 0, 0.0, 1, 1.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeInput" id=30]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=31]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 2

[sub_resource type="VisualShader" id=3]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorOp:32
	vec3 n_in32p1 = vec3(-0.50000, -0.50000, 0.00000);
	vec3 n_out32p0 = n_out3p0 + n_in32p1;

// VectorLen:5
	float n_out5p0 = length(n_out32p0);

// ScalarFunc:4
	float n_out4p0 = 1.0 - n_out5p0;

// ScalarSmoothStep:6
	float n_in6p0 = 0.00000;
	float n_in6p1 = 1.00000;
	float n_out6p0 = smoothstep(n_in6p0, n_in6p1, n_out4p0);

// Input:7
	float n_out7p0 = TIME;

// ScalarOp:8
	float n_in8p1 = 5.00000;
	float n_out8p0 = n_out7p0 * n_in8p1;

// ScalarFunc:17
	float n_out17p0 = cos(n_out8p0);

// VectorDecompose:10
	float n_out10p0 = n_out32p0.x;
	float n_out10p1 = n_out32p0.y;
	float n_out10p2 = n_out32p0.z;

// ScalarOp:15
	float n_in15p1 = 1.80000;
	float n_out15p0 = n_out10p1 * n_in15p1;

// ScalarOp:16
	float n_out16p0 = n_out17p0 - n_out15p0;

// ScalarOp:20
	float n_in20p1 = 0.65000;
	float n_out20p0 = n_out16p0 * n_in20p1;

// ScalarFunc:11
	float n_out11p0 = sin(n_out8p0);

// ScalarOp:13
	float n_out13p0 = n_out10p0 - n_out11p0;

// ScalarOp:14
	float n_in14p1 = 0.85000;
	float n_out14p0 = n_out13p0 * n_in14p1;

// VectorCompose:19
	float n_in19p2 = 0.00000;
	vec3 n_out19p0 = vec3(n_out20p0, n_out14p0, n_in19p2);

// VectorOp:21
	vec3 n_in21p1 = vec3(0.60000, 0.60000, 0.60000);
	vec3 n_out21p0 = n_out19p0 * n_in21p1;

// VectorLen:22
	float n_out22p0 = length(n_out21p0);

// ScalarFunc:23
	float n_out23p0 = 1.0 - n_out22p0;

// ScalarSmoothStep:18
	float n_in18p0 = 0.20000;
	float n_in18p1 = 1.00000;
	float n_out18p0 = smoothstep(n_in18p0, n_in18p1, n_out23p0);

// ScalarOp:28
	float n_out28p0 = n_out6p0 - n_out18p0;

// VectorOp:25
	vec3 n_in25p1 = vec3(1.00000, 0.00000, 0.50000);
	vec3 n_out25p0 = vec3(n_out28p0) * n_in25p1;

// ScalarSmoothStep:27
	float n_in27p0 = 0.20000;
	float n_in27p1 = 0.70000;
	float n_out27p0 = smoothstep(n_in27p0, n_in27p1, n_out28p0);

// VectorOp:29
	vec3 n_in29p1 = vec3(1.00000, 1.00000, 0.00000);
	vec3 n_out29p0 = vec3(n_out27p0) * n_in29p1;

// VectorOp:26
	vec3 n_out26p0 = n_out25p0 + n_out29p0;

// ScalarSmoothStep:31
	float n_in31p0 = 0.40000;
	float n_in31p1 = 0.55000;
	float n_out31p0 = smoothstep(n_in31p0, n_in31p1, n_out28p0);

// VectorOp:30
	vec3 n_out30p0 = n_out26p0 + vec3(n_out31p0);

// Output:0
	COLOR.rgb = n_out30p0;

}

void light() {
// Output:0

}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 800, 64 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( 49.5, -24.6 )
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( 240, 180 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( 37, 180 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( 240, 60 )
nodes/fragment/7/node = SubResource( 30 )
nodes/fragment/7/position = Vector2( 20, 280 )
nodes/fragment/8/node = SubResource( 31 )
nodes/fragment/8/position = Vector2( 240, 260 )
nodes/fragment/10/node = SubResource( 9 )
nodes/fragment/10/position = Vector2( 30.5, 366.9 )
nodes/fragment/11/node = SubResource( 10 )
nodes/fragment/11/position = Vector2( 33.5, 501.4 )
nodes/fragment/13/node = SubResource( 11 )
nodes/fragment/13/position = Vector2( 246.5, 466.9 )
nodes/fragment/14/node = SubResource( 12 )
nodes/fragment/14/position = Vector2( 443.5, 466.9 )
nodes/fragment/15/node = SubResource( 13 )
nodes/fragment/15/position = Vector2( 21.5, 609.8 )
nodes/fragment/16/node = SubResource( 14 )
nodes/fragment/16/position = Vector2( 258.5, 618.8 )
nodes/fragment/17/node = SubResource( 15 )
nodes/fragment/17/position = Vector2( 249.5, 392.8 )
nodes/fragment/18/node = SubResource( 16 )
nodes/fragment/18/position = Vector2( 686.5, 602.3 )
nodes/fragment/19/node = SubResource( 17 )
nodes/fragment/19/position = Vector2( 470.5, 599.3 )
nodes/fragment/20/node = SubResource( 18 )
nodes/fragment/20/position = Vector2( 259.5, 757.3 )
nodes/fragment/21/node = SubResource( 19 )
nodes/fragment/21/position = Vector2( 492.5, 742.8 )
nodes/fragment/22/node = SubResource( 20 )
nodes/fragment/22/position = Vector2( 701.5, 779.3 )
nodes/fragment/23/node = SubResource( 21 )
nodes/fragment/23/position = Vector2( 677.5, 713.3 )
nodes/fragment/25/node = SubResource( 22 )
nodes/fragment/25/position = Vector2( 704.5, 358.8 )
nodes/fragment/26/node = SubResource( 23 )
nodes/fragment/26/position = Vector2( 913.5, 317.8 )
nodes/fragment/27/node = SubResource( 24 )
nodes/fragment/27/position = Vector2( 972.5, 520.8 )
nodes/fragment/28/node = SubResource( 25 )
nodes/fragment/28/position = Vector2( 697.5, 490.8 )
nodes/fragment/29/node = SubResource( 26 )
nodes/fragment/29/position = Vector2( 979.5, 427.8 )
nodes/fragment/30/node = SubResource( 27 )
nodes/fragment/30/position = Vector2( 693.5, 236.8 )
nodes/fragment/31/node = SubResource( 28 )
nodes/fragment/31/position = Vector2( 468.5, 318.8 )
nodes/fragment/32/node = SubResource( 29 )
nodes/fragment/32/position = Vector2( 26.5, 62.3 )
nodes/fragment/connections = PoolIntArray( 5, 0, 4, 0, 4, 0, 6, 2, 7, 0, 8, 0, 8, 0, 11, 0, 11, 0, 13, 1, 10, 0, 13, 0, 13, 0, 14, 0, 10, 1, 15, 0, 8, 0, 17, 0, 17, 0, 16, 0, 15, 0, 16, 1, 14, 0, 19, 1, 16, 0, 20, 0, 20, 0, 19, 0, 19, 0, 21, 0, 21, 0, 22, 0, 22, 0, 23, 0, 23, 0, 18, 2, 25, 0, 26, 0, 6, 0, 28, 0, 18, 0, 28, 1, 28, 0, 25, 0, 28, 0, 27, 2, 27, 0, 29, 0, 29, 0, 26, 1, 26, 0, 30, 0, 28, 0, 31, 2, 31, 0, 30, 1, 30, 0, 0, 0, 3, 0, 32, 0, 32, 0, 5, 0, 32, 0, 10, 0 )

[resource]
shader = SubResource( 3 )
